version: "3"
services:
  web:
    restart: always
    build:
      dockerfile: Dockerfile
      context: "nginx"
    ports:
      - "8100:80"
      - "8200:81"
    volumes:
      # Application testing
      - ./frontend/web:/app/frontend/web:delegated
      - ./backend/web:/app/backend/web:delegated
    links:
      - php
  php:
    restart: always
    build:
      dockerfile: Dockerfile-${DOCKERFILE_FLAVOUR}
      context: "php"
      args:
        - PHP_BASE_IMAGE_VERSION=${PHP_BASE_IMAGE_VERSION}
    image: ${PHP_IMAGE_NAME}:${PHP_BASE_IMAGE_VERSION}${PHP_IMAGE_VERSION_SUFFIX}
    environment:
      - GITHUB_API_TOKEN=${GITHUB_API_TOKEN}
      - PHP_ENABLE_XDEBUG=1
      - TEST_RUNTIME_PATH=/tmp/runtime
    volumes:
      - ./:/app:delegated
      # Composer cache
      - ~/.composer/cache:/root/.composer/cache:delegated
    links:
      - db
      - redis
  db:
    restart: always
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: username
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: yii2advanced
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "8106:3306"
  redis:
    restart: always
    image: redis:latest
    volumes:
      - ./redis:/data
#  db:
#    image: postgres:13-alpine
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      POSTGRES_USER: username
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: yii2advanced
#    volumes:
#      - ./mysql/data:/var/lib/postgresql/data
#      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
