<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "account".
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $name
 * @property integer $account_type_id
 * @property integer $icon_id
 * @property integer $color_id
 * @property string $balance
 * @property integer $default_currency
 *
 * @property \common\models\AccountType $accountType
 * @property \common\models\Color $color
 * @property \common\models\Currency $defaultCurrency
 * @property \common\models\Icon $icon
 * @property \common\models\User $user
 * @property \common\models\Transaction[] $transactions
 * @property \common\models\Transaction[] $transactions0
 * @property string $aliasModel
 */
abstract class Account extends \yii\db\ActiveRecord
{

    public $provider;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'account';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'account_type_id', 'icon_id', 'color_id', 'default_currency'], 'integer'],
            [['account_type_id', 'icon_id', 'color_id', 'balance', 'default_currency', 'user_id', 'name'], 'required'],
            [['balance'], 'number'],
            [['account_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\AccountType::className(), 'targetAttribute' => ['account_type_id' => 'id']],
            [['color_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Color::className(), 'targetAttribute' => ['color_id' => 'id']],
            [['default_currency'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Currency::className(), 'targetAttribute' => ['default_currency' => 'id']],
            [['icon_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Icon::className(), 'targetAttribute' => ['icon_id' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['user_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'user_id' => 'Owner',
            'name' => 'Account Name',
            'account_type_id' => 'Account Type ID',
            'icon_id' => 'Icon',
            'color_id' => 'Color',
            'balance' => 'Current Balance',
            'default_currency' => 'Currency',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'user_id' => 'Owner',
            'name' => "Account's friendly name",
            'icon_id' => 'Icon',
            'color_id' => 'Color',
            'balance' => 'Current Balance',
            'default_currency' => 'Currency',
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAccountType()
    {
        return $this->hasOne(\common\models\AccountType::className(), ['id' => 'account_type_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getColor()
    {
        return $this->hasOne(\common\models\Color::className(), ['id' => 'color_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDefaultCurrency()
    {
        return $this->hasOne(\common\models\Currency::className(), ['id' => 'default_currency']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getIcon()
    {
        return $this->hasOne(\common\models\Icon::className(), ['id' => 'icon_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\common\models\User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTransactions()
    {
        return $this->hasMany(\common\models\Transaction::className(), ['account_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTransactions0()
    {
        return $this->hasMany(\common\models\Transaction::className(), ['target_id' => 'id']);
    }



    /**
     * @inheritdoc
     * @return \common\models\AccountQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\AccountQuery(get_called_class());
    }
}
