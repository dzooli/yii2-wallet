<?php

// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use common\models\TransactionQuery;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;

/**
 * This is the base-model class for table "category".
 *
 * @property integer $id
 * @property string $name
 * @property integer $category_type_id
 * @property integer $icon_id
 * @property integer $color_id
 *
 * @property CategoryType $categoryType
 * @property Color $color
 * @property Icon $icon
 * @property Transaction[] $transactions
 * @property string $aliasModel
 */
abstract class Category extends ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'category';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'category_type_id', 'icon_id', 'color_id'], 'required'],
            [['category_type_id', 'icon_id', 'color_id'], 'integer'],
            [['name'], 'string', 'max' => 80],
            [['category_type_id'], 'exist', 'skipOnError' => true,
                'targetClass' => CategoryType::class,
                'targetAttribute' => ['category_type_id' => 'id']],
            [['color_id'], 'exist', 'skipOnError' => true,
                'targetClass' => Color::class,
                'targetAttribute' => ['color_id' => 'id']],
            [['icon_id'], 'exist', 'skipOnError' => true,
                'targetClass' => Icon::class,
                'targetAttribute' => ['icon_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'category_type_id' => 'Kind of Category',
            'icon_id' => 'Icon',
            'color_id' => 'Color',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'category_type_id' => 'Kind of Category',
            'icon_id' => 'Icon',
            'color_id' => 'Color',
        ]);
    }

    /**
     * @return ActiveQuery
     */
    public function getCategoryType()
    {
        return $this->hasOne(CategoryType::class, ['id' => 'category_type_id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getColor()
    {
        return $this->hasOne(Color::class, ['id' => 'color_id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getIcon()
    {
        return $this->hasOne(Icon::class, ['id' => 'icon_id']);
    }

    /**
     * @return ActiveQuery
     */
    public function getTransactions()
    {
        return $this->hasMany(Transaction::class, ['category_id' => 'id']);
    }

    /**
     * @inheritdoc
     * @return TransactionQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new TransactionQuery(get_called_class());
    }
}
